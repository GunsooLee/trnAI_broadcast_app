services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi_backend
    ports:
      - "8501:8501"
    env_file: backend/.env
    restart: unless-stopped
    networks:
      - shopping-network

  frontend:
    build: ./frontend
    container_name: nextjs_frontend
    ports:
      - "3001:3000"
    restart: unless-stopped
    networks:
      - shopping-network

  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant_vector_db
    ports:
      - "6333:6333"
    volumes:
      - ./qdrant_storage:/qdrant/storage
    restart: unless-stopped
    networks:
      - shopping-network


  postgres:
    image: postgres:16
    container_name: trnAi_postgres # 컨테이너 이름
    environment:
      POSTGRES_USER: TRN_AI     # PostgreSQL 사용자 이름
      POSTGRES_PASSWORD: TRN_AI # PostgreSQL 비밀번호
      POSTGRES_DB: TRNAI_DB     # 생성할 데이터베이스 이름
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    networks:
      - shopping-network

  n8n:
    image: n8nio/n8n:1.110.1
    container_name: trnAi_n8n
    ports:
      - "5678:5678"
    environment:
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - WEBHOOK_TUNNEL_URL=http://localhost:5678/
    volumes:
      - n8n_data:/home/node/.n8n
    restart: always
    networks:
      - shopping-network

networks:
  shopping-network:
    external: true

volumes:
  postgres_data:
  n8n_data:
